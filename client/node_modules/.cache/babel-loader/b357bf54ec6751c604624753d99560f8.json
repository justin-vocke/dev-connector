{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POSTS } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nconst postReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["C:/Users/topti/Desktop/projects/dev-connector/client/src/reducers/postReducer.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POSTS","initialState","posts","post","loading","error","postReducer","state","action","type","payload","map","_id","id","likes"],"mappings":"AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,YAJF,QAKO,kBALP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKZ,SAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,KAAK,EAAEQ,OAFF;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,KAAK,EAAEK,OAFF;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYS,GAAZ,CAAgBR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaF,OAAO,CAACG,EAArB,GAA0B,EAAE,GAAGV,IAAL;AAAWW,UAAAA,KAAK,EAAEJ,OAAO,CAACI;AAA1B,SAA1B,GAA8DX,IAAtF,CAFF;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOG,KAAP;AApBJ;AAuBD,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POSTS\r\n} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n}\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      }\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      }\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post),\r\n        loading: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\nexport default postReducer;\r\n"]},"metadata":{},"sourceType":"module"}