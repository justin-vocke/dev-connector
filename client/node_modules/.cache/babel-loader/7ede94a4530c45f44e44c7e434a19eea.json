{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\topti\\\\Desktop\\\\projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileAbout from './ProfileAbout';\n\nconst Profile = ({\n  match,\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 52\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Back to profile\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }, \"Edit profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Experience\"), profile.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 47\n    }\n  }, profile.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"No experience credentials\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Education\"), profile.education.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 46\n    }\n  }, profile.education.map(education => /*#__PURE__*/React.createElement(ProfileEducation, {\n    key: education._id,\n    education: education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"No education credentials\")), profile.githubusername && /*#__PURE__*/React.createElement(ProfileGithub, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profileReducer,\n  auth: state.authReducer\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["C:/Users/topti/Desktop/projects/dev-connector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","ProfileTop","ProfileExperience","ProfileEducation","ProfileAbout","Profile","match","profile","loading","auth","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","propTypes","func","isRequired","object","mapStateToProps","state","profileReducer","authReducer"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\n\r\nimport ProfileAbout from './ProfileAbout';\r\n\r\nconst Profile = ({ match, getProfileById, profile: { profile, loading }, auth }) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById])\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? <Spinner /> : <Fragment>\r\n        <Link to='/profiles' className=\"btn btn-light\">\r\n          Back to profile\r\n        </Link>\r\n        {auth.isAuthenticated && auth.loading === false &&\r\n          auth.user._id === profile.user._id &&\r\n          (<Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n            Edit profile\r\n          </Link>)}\r\n        <div class=\"profile-grid my-1\">\r\n          <ProfileTop profile={profile} />\r\n          <ProfileAbout profile={profile} />\r\n          <div className=\"profile-exp bg-white p-2\">\r\n            <h2 className=\"text-primary\">Experience</h2>\r\n            {profile.experience.length > 0 ? (<Fragment>\r\n              {profile.experience.map(experience => (\r\n                <ProfileExperience key={experience._id} experience={experience} />\r\n              ))}\r\n            </Fragment>) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n          </div>\r\n\r\n          <div className=\"profile-edu bg-white p-2\">\r\n            <h2 className=\"text-primary\">Education</h2>\r\n            {profile.education.length > 0 ? (<Fragment>\r\n              {profile.education.map(education => (\r\n                <ProfileEducation key={education._id} education={education} />\r\n              ))}\r\n            </Fragment>) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n          </div>\r\n\r\n          {profile.githubusername && (\r\n            <ProfileGithub />\r\n          )}\r\n        </div>\r\n      </Fragment>}\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profileReducer,\r\n  auth: state.authReducer\r\n})\r\nexport default connect(mapStateToProps, { getProfileById })(Profile)\r\n"]},"metadata":{},"sourceType":"module"}