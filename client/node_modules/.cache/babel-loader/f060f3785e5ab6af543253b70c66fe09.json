{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\topti\\\\Desktop\\\\projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/spinner';\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Github repos\"), repos === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 26\n    }\n  }) : repos.map(repo => /*#__PURE__*/React.createElement(\"div\", {\n    key: repo._id,\n    className: \"repo bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }))));\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.object.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profileReducer.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["C:/Users/topti/Desktop/projects/dev-connector/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","map","repo","_id","propTypes","func","isRequired","object","string","mapStateToProps","state","profileReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYH,EAAAA,cAAZ;AAA4BI,EAAAA;AAA5B,CAAD,KAAyC;AAC7DP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc,CAACG,QAAD,CAAd;AAED,GAHQ,EAGN,CAACH,cAAc,CAACG,QAAD,CAAf,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGIC,KAAK,KAAK,IAAV,gBAAiB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GACEA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACZ;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAJN,CADF;AAeD,CArBD;;AAuBAL,aAAa,CAACM,SAAd,GAA0B;AACxBR,EAAAA,cAAc,EAAEF,SAAS,CAACW,IAAV,CAAeC,UADP;AAExBN,EAAAA,KAAK,EAAEN,SAAS,CAACa,MAAV,CAAiBD,UAFA;AAGxBP,EAAAA,QAAQ,EAAEL,SAAS,CAACc,MAAV,CAAiBF;AAHH,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,KAAK,EAAEU,KAAK,CAACC,cAAN,CAAqBX;AADI,CAAL,CAA7B;;AAGA,eAAeL,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/spinner';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n\r\n  }, [getGithubRepos(username)]);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">Github repos</h2>\r\n      {\r\n        repos === null ? <Spinner /> : (\r\n          repos.map(repo => (\r\n            <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n              <div></div>\r\n            </div >\r\n          ))\r\n        )\r\n      }\r\n    </div >\r\n\r\n  )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.object.isRequired,\r\n  username: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profileReducer.repos\r\n})\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub)\r\n"]},"metadata":{},"sourceType":"module"}