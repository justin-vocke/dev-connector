{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\topti\\\\Desktop\\\\projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/spinner';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  match,\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 52\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  })));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profileReducer,\n  auth: state.authReducer\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["C:/Users/topti/Desktop/projects/dev-connector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Profile","match","profile","loading","auth","params","id","propTypes","func","isRequired","object","mapStateToProps","state","profileReducer","authReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA,cAAT;AAAyBG,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAlC;AAAwDC,EAAAA;AAAxD,CAAD,KAAoE;AAClFT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACE,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACP,cAAD,CAFM,CAAT;AAGA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,gBAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC3C,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD2C,CAD/C,CADF;AAOD,CAXD;;AAaAH,OAAO,CAACO,SAAR,GAAoB;AAClBR,EAAAA,cAAc,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADb;AAElBP,EAAAA,OAAO,EAAEN,SAAS,CAACc,MAAV,CAAiBD,UAFR;AAGlBL,EAAAA,IAAI,EAAER,SAAS,CAACc,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,OAAO,EAAEU,KAAK,CAACC,cADiB;AAEhCT,EAAAA,IAAI,EAAEQ,KAAK,CAACE;AAFoB,CAAL,CAA7B;;AAIA,eAAejB,OAAO,CAACc,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({ match, getProfileById, profile: { profile, loading }, auth }) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById])\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? <Spinner /> : <Fragment>\r\n        <Link to='/profiles' className=\"btn btn-light\"></Link>\r\n      </Fragment>}\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profileReducer,\r\n  auth: state.authReducer\r\n})\r\nexport default connect(mapStateToProps, { getProfileById })(Profile)\r\n"]},"metadata":{},"sourceType":"module"}