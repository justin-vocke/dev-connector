{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\topti\\\\Desktop\\\\projects\\\\dev-connector\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}));\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.authReducer\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:/Users/topti/Desktop/projects/dev-connector/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state","authReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAA9B;AAA4D,KAAGC;AAA/D,CAAD,kBACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EACpBC,KAAK,IAAI,CAACH,eAAD,IAAoB,CAACC,OAArB,gBACR,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAIN,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAYAP,YAAY,CAACQ,SAAb,GAAyB;AACvBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC;AADA,CAAzB;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,IAAI,EAAES,KAAK,CAACC;AADoB,CAAL,CAA7B;;AAGA,eAAed,OAAO,CAACY,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\r\n  <Route {...rest} render=\r\n    {props => !isAuthenticated && !loading ? (\r\n      <Redirect to='/login' />\r\n    )\r\n      : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer\r\n})\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}